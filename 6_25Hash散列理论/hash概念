

1,链表，尾插法，链表的操作
2，链表头插法
3，Hash散列算法的概念
4，通过Hash散列算法，自行模拟go中map的功能









Hash，一般翻译做“散列”，也有直接音译为“哈希”的，就是把任意长度的输入（又叫做预映射pre-image）通过散列算法变换成固定长度的输出，该输出就是散列值


严格体现Hash散列算法的产品如下：
1，MD5
2，MD4
3, SHA-256, SHA-1






//将key转换成数组下标的散列算法
func HashCode(key string) int {
	var index int = 0
	index = int(key[0])
	for k := 0; k < len(key); k++ {
		index *= (1103515245 + int(key[k]))
	}
	index >>= 27
	index &= 16 - 1

	return index
}





课堂练习
1，新建工程，通过双向链表，实现正向与反向的遍历输出


作业：
1，原始的Joseph问题描述如下：有n个人围坐在一个圆桌周围，把这n个人依次编号为1、2、3……n。从编号是1的人开始数，数到第m个人出列，然后从出列的下一个人重新开始报数，数到第m个人时又出列，以此类推。当n=6，m=5时，出列顺序依次是5,4,6,2,3,1，用循环链表模拟以上过程













